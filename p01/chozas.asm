*                SYMBOLS
		ORG	$25000

***************************************
* 1. Declarar Variables (datos)
***************************************
VIA_2		EQU	$60021
ORB		EQU	VIA_2+0
ORA		EQU	VIA_2+2
DDRB		EQU	VIA_2+4
DDRA		EQU	VIA_2+6
T1CL		EQU	VIA_2+8
T1CH		EQU	VIA_2+10
T1LL		EQU	VIA_2+12
T1LH		EQU	VIA_2+14
T2LL		EQU	VIA_2+16
T2CH		EQU	VIA_2+18
SR		EQU	VIA_2+20
ACR		EQU	VIA_2+22
PCR		EQU	VIA_2+24
IFR		EQU	VIA_2+26
IER		EQU	VIA_2+28
ORAE		EQU	VIA_2+30

***************************************
* PROGRAMA PRINCIPAL
***************************************
* 2. Programar la VIA 2 Inicializando datos
INICIO	MOVE.B	#$F0,DDRA	PUESTA A 11110000 DE DDRA
	MOVE.B	#$0,D0		PUESTA A 0 DE D0
	MOVE.B	#$0,D1		PUESTA A 0 DE D1

* 3. Leer estado de interruptores
BUCLE	MOVE.B	ORA,D0		RECOPILA INFORMACIÓN DEL ESTADO DE INTERRUPTORES Y 
LO PONE EN D0
	ROL	#4,D0

* 4. ¿Todos los leds a 0?
	CMP.B	#$0,D0		¿ESTÁN LOS LEDS A 0?
	BEQ	FIN_BUCLE	SI ESTÁN A 0 IR A FIN_BUCLE

* 5. ¿Estado anterior = estado actual?
	CMP	D0,D1		COMAPARA D0(ACTUAL) CON D1(ANTERIOR)
	BEQ	BUCLE		SI D0 = D1 VUELVE AL BUCLE

* 6. Leer nuevo estado de leds y guardarlo
	MOVE.B	D0,D1		MUEVO EL ESTADO ACTUAL D0 AL ESTADO ANTERIOR D1
	MOVE.B	D1,ORA		ESCRIBO EN LOS LEDS EL ESTADO ACTUAL (QUE PASA A SER EL 
ANTERIOR)
	BRA	BUCLE		SALTA INCONDICIONALMENTE A BUCLE

* 4. ¿Todos los  leds a 0? = SI
FIN_BUCLE	MOVE.B	#$00,ORA	APAGA LOS LEDS PARA FINALIZAR
	STOP	#$2000		INSTRUCCIÓN PRIVILEGIADA DE DETENCIÓN EN LA POSIÓN 2000 
HEXADECIMAL
FIN_PROGRAMA	END		FIN DEL PROGRAMA PRINCIPAL
